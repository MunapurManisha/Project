//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vgather.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EventManagementEntities : DbContext
    {
        public EventManagementEntities()
            : base("name=EventManagementEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<EventBooking> EventBookings { get; set; }
        public virtual DbSet<EventType> EventTypes { get; set; }
        public virtual DbSet<FeedBack> FeedBacks { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<Participant> Participants { get; set; }
        public virtual DbSet<payment_Booking> payment_Booking { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Registration> Registrations { get; set; }
        public virtual DbSet<service_company> service_company { get; set; }
        public virtual DbSet<service_Items> service_Items { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<serviceType> serviceTypes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Venue> Venues { get; set; }
        public virtual DbSet<AdminFeedbackForm> AdminFeedbackForms { get; set; }
        public virtual DbSet<FeedBackForm> FeedBackForms { get; set; }
        public virtual DbSet<ContactList2> ContactList2 { get; set; }
        public virtual DbSet<invitation2> invitation2 { get; set; }
        public virtual DbSet<TriggerFeed> TriggerFeeds { get; set; }
    
        public virtual ObjectResult<prc_allEvents_Result> prc_allEvents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prc_allEvents_Result>("prc_allEvents");
        }
    }
}
